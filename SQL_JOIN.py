import sqlite3

# Подключение к бд + её создание
base = sqlite3.connect('example.db')
cur = base.cursor()

# Создание таблицы users
base.execute('CREATE TABLE IF NOT EXISTS users (id PRIMARY KEY, name)')
base.commit()

# Создание таблицы orders
base.execute('CREATE TABLE IF NOT EXISTS orders (id PRIMARY KEY, user_id, product)')
base.commit()

# Вставка данных в users
cur.executemany('INSERT INTO users VALUES (?, ?)', [(1, "Алиса"),(2, "Боб"),(3, "Чарли"),(4, "Давид")])
base.commit()

# Вставка данных в orders
cur.executemany('INSERT INTO orders VALUES (?, ?, ?)', [(1, 1, "Ноутбук"), (2, 1, "Телефон"), (3, 2, "Книга"), (4, 6, "Палетка")])
base.commit()

# Выполняем INNER JOIN (Показывает только те записи, для которых нашлись пары)
cur.execute("SELECT users.id, users.name, orders.product FROM users JOIN orders ON users.id = orders.user_id;")
'''
+----+--------+        +----+---------+------------+         +----+--------+-----------+  
| id |  name  |        | id | user_id |  product  |          | id |  name  | product   |  
+----+--------+        +----+---------+------------+         +----+--------+-----------+  
|  1 | Алиса  |        |  1 |    1    | Ноутбук    |   =>    |  1 | Алиса  | Ноутбук   |  
|  2 | Боб    |        |  2 |    1    | Телефон    |         |  1 | Алиса  | Телефон   |  
|  3 | Чарли  |        |  3 |    2    | Книга      |         |  2 | Боб    | Книга     |  
|  4 | Давид  |        |  4 |    6    | Палетка    |         +----+--------+-----------+  
+----+--------+        +----+---------+------------+  
'''

# Выполняем LEFT JOIN (Показывает все записи из первой таблицы, для не найденных пар из второй проставит NONE)
cur.execute("SELECT users.id, users.name, orders.product FROM users LEFT JOIN orders ON users.id = orders.user_id;")

'''
+----+--------+        +----+---------+------------+         +----+--------+-----------+  
| id |  name  |        | id | user_id |  product  |          | id |  name  | product   |  
+----+--------+        +----+---------+------------+         +----+--------+-----------+  
|  1 | Алиса  |        |  1 |    1    | Ноутбук    |   =>    |  1 | Алиса  | Ноутбук   |  
|  2 | Боб    |        |  2 |    1    | Телефон    |         |  1 | Алиса  | Телефон   |  
|  3 | Чарли  |        |  3 |    2    | Книга      |         |  2 | Боб    | Книга     |  
|  4 | Давид  |        |  4 |    6    | Палетка    |         |  3 | Чарли  | NULL      |  
+----+--------+        +----+---------+------------+         |  4 | Давид  | NULL      |  
                                                             +----+--------+-----------+  
'''

# RIGHT JOIN можно симулировать, поменяв местами таблицы в LEFT JOIN
cur.execute("SELECT users.id, orders.product, users.name FROM orders LEFT JOIN users ON orders.user_id = users.id;")

'''
Как оно есть в sqlite3:

+----+---------+------------+        +----+--------+         +----+-----------+--------+  
| id | user_id |  product  |         | id |  name  |         | id | product   |  name  |  
+----+---------+------------+        +----+--------+         +----+-----------+--------+  
|  1 |    1    | Ноутбук    |        |  1 | Алиса  |   =>    |  1 | Ноутбук   | Алиса  |  
|  2 |    1    | Телефон    |        |  2 | Боб    |         |  1 | Телефон   | Алиса  |  
|  3 |    2    | Книга      |        |  3 | Чарли  |         |  2 | Книга     | Боб    |  
|  4 |    6    | Палетка    |        |  4 | Давид  |         |NULL| Палетка   | NULL   |  
+----+---------+------------+        +----+--------+         +----+-----------+--------+ 

Как оно было бы, если бы Right join поддерживался:

+----+--------+        +----+---------+------------+         +----+--------+-----------+  
| id |  name  |        | id | user_id |  product  |          | id |  name  | product   |  
+----+--------+        +----+---------+------------+         +----+--------+-----------+  
|  1 | Алиса  |        |  1 |    1    | Ноутбук    |   =>    |  1 | Алиса  | Ноутбук   |  
|  2 | Боб    |        |  2 |    1    | Телефон    |         |  1 | Алиса  | Телефон   |  
|  3 | Чарли  |        |  3 |    2    | Книга      |         |  2 | Боб    | Книга     |  
|  4 | Давид  |        |  4 |    6    | Палетка    |         |NULL| NULL   | Палетка   |  
+----+--------+        +----+---------+------------+         +----+--------+-----------+ 

'''

# симуляция FULL JOIN (объединяем LEFT JOIN и RIGHT JOIN через UNION)

cur.execute("""
SELECT users.id, users.name, orders.product 
FROM users 
LEFT JOIN orders ON users.id = orders.user_id
UNION
SELECT orders.user_id, users.name, orders.product 
FROM orders 
LEFT JOIN users ON orders.user_id = users.id;
""")

'''
+----+--------+-----------+  
| id |  name  | product   |  
+----+--------+-----------+  
|  1 | Алиса  | Ноутбук   |  
|  1 | Алиса  | Телефон   |  
|  2 | Боб    | Книга     |  
|  3 | Чарли  | NULL      |  
|  4 | Давид  | NULL      |  
|  6 | NULL   | Палетка   |  
+----+--------+-----------+  


+----+--------+        +----+---------+------------+         +----+--------+-----------+  
| id |  name  |        | id | user_id |  product  |          | id |  name  | product   |  
+----+--------+        +----+---------+------------+         +----+--------+-----------+  
|  1 | Алиса  |        |  1 |    1    | Ноутбук    |   =>    |  1 | Алиса  | Ноутбук   |  
|  2 | Боб    |        |  2 |    1    | Телефон    |         |  1 | Алиса  | Телефон   |  
|  3 | Чарли  |        |  3 |    2    | Книга      |         |  2 | Боб    | Книга     |  
|  4 | Давид  |        |  4 |    6    | Палетка    |         |  3 | Чарли  | NULL      |
+----+--------+        +----+---------+------------+         |  4 | Давид  | NULL      |  
                                                             |  6 | NULL   | Палетка   |  
                                                             +----+--------+-----------+   
'''

# Вывод результатов
for row in cur.fetchall():
    print(row)

# Закрытие бд
base.close()
